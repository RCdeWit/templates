model_id: meta-llama/Meta-Llama-3-8B # <-- change this to the model with the same architecture as the model weights you will bring
initial_base_model_ckpt_path: s3://llama-2-weights/Meta-Llama-Guard-2-8B # <-- use this to point to the current location of the model weights
train_path: s3://air-example-data/nvidia-aegis-llama-guard-defensive/nvidia-aegis-llama-guard-defensive-train.jsonl # <-- change this to the path to your preprocessed training data
valid_path: s3://air-example-data/nvidia-aegis-llama-guard-defensive/nvidia-aegis-llama-guard-defensive-test.jsonl # <-- change this to the path to your preprocessed validation data. This is optional
generation_config: # <-- Change the generation_config below according to your data preprocessing
  prompt_format:
    system: "{instruction}" # <-- required field
    user: "{instruction}" # <-- required field
    assistant: "{instruction}" # <-- required field
    trailing_assistant: "" # <-- required field, inference-only
    bos: "" # optional, empty by default
context_length: 4096 # <-- change this to the context length you want to use
num_devices: 16 # <-- change this to total number of GPUs that you want to use
num_epochs: 3 # <-- change this to the number of epochs that you want to train for
train_batch_size_per_device: 4 # <-- change this to maximize GPU utilization
eval_batch_size_per_device: 4 # <-- change this to maximize GPU utilization
learning_rate: 1e-4 # <-- For LoRA, we recommend to default to 1e-4, for full-parameter training, we recommend 1e-5
padding: "longest" # This will pad batches to the longest sequence. Use "max_length" when profiling to profile the worst case.
num_checkpoints_to_keep: 1
dataset_size_scaling_factor: 10000
output_dir: /mnt/local_storage
deepspeed:
  config_path: deepspeed_configs/zero_3_offload_optim+param.json
dataset_size_scaling_factor: 10000 # internal flag. No need to change
flash_attention_2: true
trainer_resources:
  memory: 53687091200 # 50 GB memory
worker_resources:
  accelerator_type:A10G: 0.001
lora_config:
  r: 8
  lora_alpha: 16
  lora_dropout: 0.05
  target_modules:
    - q_proj
    - v_proj
    - k_proj
    - o_proj
    - gate_proj
    - up_proj
    - down_proj
    - embed_tokens
    - lm_head
  task_type: "CAUSAL_LM"
  modules_to_save: []
  bias: "none"
  fan_in_fan_out: false
  init_lora_weights: true
